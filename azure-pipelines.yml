# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  batch: true
  branches:
    include:
    - main

pr:
  branches:
    include:
      - main

resources:
- repo: self

variables:
- name: containerRegistry
  value: crsycdivaasandbox
- name: tags
  value: $(Build.BuildNumber)
- name: isMain
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

stages:
- stage: Build_and_push_cmpld_images
  displayName: Build and push compiled images
  jobs:
  - template: docker-build-deploy-template.yml
    parameters:
      profile: x86_64_platform
      containerRegistry: $(containerRegistry)
      tags: $(tags)

  - template: docker-build-deploy-template.yml
    parameters:
      profile: arm64_platform_x86_machine
      containerRegistry: $(containerRegistry)
      tags: $(tags)

  - template: docker-build-deploy-template.yml
    parameters:
      profile: arm64_platform_arm_machine
      containerRegistry: $(containerRegistry)
      tags: $(tags)
      targetArchitecture: arm64

- stage: deploy_image_to_iot_edge_devices
  displayName: Deploy image to IoT edge devices if changes are applied to main branch
  condition: and(succeeded(), eq(variables.isMain, 'true')) #stage only runs if run on main branche
  jobs:
  - job: deploy_image_to_iot_edge_devices
    displayName: Deploying images to IoT Edge devices
    pool: 
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      submodules: recursive
    - script: mkdir $(System.DefaultWorkingDirectory)/config
    - script: cp '$(Build.SourcesDirectory)/deployment.template.json' $(System.DefaultWorkingDirectory)/config/deployment.json
    - script: sed -i 's/{tag}/$(Build.BuildNumber)/g' $(System.DefaultWorkingDirectory)/config/deployment.json
    # - task: AzureIoTEdge@2
    #   displayName: AzureIoTEdge - Generate deployment manifest
    #   inputs:
    #     action: Generate deployment manifest
    #     templateFilePath: '$(Build.SourcesDirectory)/deployment.template.json'
    #     defaultPlatform: amd64
    #     deploymentManifestOutputPath: $(System.DefaultWorkingDirectory)/config/deployment.json
    #     validateGeneratedDeploymentManifest: true
    - script: cat $(System.DefaultWorkingDirectory)/config/deployment.json
    - task: AzureIoTEdge@2
      displayName: AzureIoTEdge - Deploying manifest to device
      inputs:
        action: Deploy to IoT Edge devices
        deploymentFilePath: $(System.DefaultWorkingDirectory)/config/deployment.json
        azureSubscription: sandboxSubscription
        iothubname: iothubsycdivasandbox
        deploymentid: $(System.TeamProject)-devops-deployment
        priority: '0'
        deviceOption: 'Single Device'
        deviceId: Leeloo_edge_runtime
