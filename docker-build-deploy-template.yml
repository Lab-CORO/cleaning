# Docker build template

parameters:
- name: profile
  type: string
- name: tags
  type: string
- name: containerRegistry
  type: string
- name: targetArchitecture
  type: string
  default: 'x64'
- name: useCache
  type: boolean
  default: true

jobs:
- job: Build_${{ parameters.profile }}
  displayName: Build image ${{ parameters.profile }}
  pool:
    name: Default
    # vmImage: ubuntu-latest
  steps:
  - checkout: self
    submodules: recursive
  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: ${{ parameters.containerRegistry }}
  - ${{ if eq(parameters.targetArchitecture, 'arm64') }}:
    - script: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - task: Docker@2
    displayName: Building image ${{ parameters.profile }}
    inputs:
      command: build
      dockerfile: '$(Build.SourcesDirectory)/Dockerfile.${{ parameters.profile }}'
      repository: rubyrhod/${{ parameters.profile }}
      tags: ${{ parameters.tags }}
      ${{ if not(parameters.useCache) }}:
        arguments: --no-cache
  - task: Docker@2
    displayName: Pushing image ${{ parameters.profile }} to registry $${{ parameters.containerRegistry }}
    inputs:
      command: push
      containerRegistry: ${{ parameters.containerRegistry }}
      repository: rubyrhod/${{ parameters.profile }}
      tags: ${{ parameters.tags }}
  - script: docker image prune -f
    displayName: Pruning dangling images